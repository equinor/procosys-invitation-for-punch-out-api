name: 🚀🛠️ Deploy to dev

on:
  workflow_dispatch:
  pull_request:
    types: 
      - reopened
      - opened
      - ready_for_review
      - synchronize
    branches: 
      - main

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get DevOps Token
        id: 'get-devops-token'
        uses: ./.github/actions/get-devops-token
        with:
          client-id: ${{ vars.EQUINOR_PROCOSYS_NON_PROD_DEVOPS_CLIENT_ID }}
          tenant-id: ${{ vars.AZURE_TENANT_ID }}

      # TODO fix implicit login
      - name: Login to Azure Container Registry
        run: az acr login --name procosys

      # TODO improve token handling
      - name: Get Client Token
        shell: bash
        run: |
          TOKEN=$(az account get-access-token | jq -r '.accessToken')
          echo "CLIENT_TOKEN=$TOKEN" >> $GITHUB_ENV

      - name: Create Docker tag from SHA
        run: |
          echo "DOCKER_TAG=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV
          echo "Docker tag: $DOCKER_TAG"

      # TODO remove debug
      - name: Debug Info
        run: |
          echo "GITHUB_SHA: $GITHUB_SHA"
          echo "DOCKER_TAG: $DOCKER_TAG"

      # TODO check if the image already exists
      - name: Build and push Docker image
        env:
          DOCKER_BUILDKIT: 1 # Enable BuildKit for this step
        uses: docker/build-push-action@v4
        with:
          context: ./src
          file: ./src/Equinor.ProCoSys.IPO.WebApi/Dockerfile
          push: true
          build-args: |
            FEED_ACCESSTOKEN=${{ steps.get-devops-token.outputs.token }}
            AZURE_CLIENT_ID=${{ vars.EQUINOR_PROCOSYS_NON_PROD_DEVOPS_CLIENT_ID }}
            AZURE_TENANT_ID=${{ vars.AZURE_TENANT_ID }}
          secrets: |
            GIT_AUTH_TOKEN=${{ env.CLIENT_TOKEN }}
          tags: |
            procosys.azurecr.io/api/ipo/api:${{ env.DOCKER_TAG }}
            procosys.azurecr.io/api/ipo/api:latest

      - name: Get Radix Token
        id: 'get-radix-token'
        uses: ./.github/actions/get-radix-token
        with:
          client-id: ${{ vars.EQUINOR_PROCOSYS_NON_PROD_DEVOPS_CLIENT_ID }}
          tenant-id: ${{ vars.AZURE_TENANT_ID }}

      - name: Set app service account token
        run: |
          echo "APP_SERVICE_ACCOUNT_TOKEN=${{ steps.get-radix-token.outputs.token }}" >> $GITHUB_ENV

      # - name: Deploy on Radix
      #   uses: equinor/radix-github-actions@v1
      #   with:
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     args: >
      #       create pipeline-job
      #       deploy
      #       -a procosys-ipo-api
      #       --from-config
      #       -e dev
      #       --component backend
      #       --image-tag-name backend=${{ env.DOCKER_TAG }}
      #       -f 

      - name: Radix CLI setup
        uses: equinor/radix-github-actions@v2
        with:
          azure_client_id: ${{ vars.EQUINOR_PROCOSYS_NON_PROD_DEVOPS_CLIENT_ID }}

      - name: Deploy on Radix
        run: |
          rx create job deploy \
            --application procosys-ipo-api \
            --from-config \
            --environment dev \
            --component backend \
            --image-tag-name backend=${{ env.DOCKER_TAG }} \
            --image-tag-name backend=latest
