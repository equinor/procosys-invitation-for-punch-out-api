name: 🚀🛠️ Deploy to dev

on:
  workflow_dispatch:
  pull_request:
    types: 
      - reopened
      - opened
      - ready_for_review
      - synchronize
    branches: 
      - main

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get DevOps Token
        id: 'get-devops-token'
        uses: ./.github/actions/get-devops-token
        with:
          client-id: ${{ vars.EQUINOR_PROCOSYS_NON_PROD_DEVOPS_CLIENT_ID }}
          tenant-id: ${{ vars.AZURE_TENANT_ID }}

      # TODO fix implicit login
      - name: Login to Azure Container Registry
        run: az acr login --name procosys

      # TODO improve token handling
      - name: Get Client Token
        shell: bash
        run: |
          TOKEN=$(az account get-access-token | jq -r '.accessToken')
          echo "CLIENT_TOKEN=$TOKEN" >> $GITHUB_ENV

      - name: Create Docker tag from SHA
        run: |
          echo "DOCKER_TAG=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV
          echo "Docker tag: ${{ env.DOCKER_TAG }}"

      # TODO check if the image already exists
      - name: Build and push Docker image
        env:
          DOCKER_BUILDKIT: 1 # Enable BuildKit for this step
        uses: docker/build-push-action@v4
        with:
          context: ./src
          file: ./src/Equinor.ProCoSys.IPO.WebApi/Dockerfile
          push: true
          build-args: |
            FEED_ACCESSTOKEN=${{ steps.get-devops-token.outputs.token }}
            AZURE_CLIENT_ID=${{ vars.EQUINOR_PROCOSYS_NON_PROD_DEVOPS_CLIENT_ID }}
            AZURE_TENANT_ID=${{ vars.AZURE_TENANT_ID }}
          secrets: |
            GIT_AUTH_TOKEN=${{ env.CLIENT_TOKEN }}
          tags: |
            procosys.azurecr.io/api/ipo/api:${{ env.DOCKER_TAG }}
            procosys.azurecr.io/api/ipo/api:latest

